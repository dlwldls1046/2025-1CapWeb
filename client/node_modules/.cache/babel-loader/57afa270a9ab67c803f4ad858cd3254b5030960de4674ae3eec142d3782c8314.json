{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlwld\\\\Desktop\\\\JBU\\\\2025_1 CapWeb\\\\client\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [codeSent, setCodeSent] = useState(false);\n  const [verifyCode, setVerifyCode] = useState('');\n  const [inputCode, setInputCode] = useState('');\n  const [verified, setVerified] = useState(false);\n  const [msg, setMsg] = useState('');\n  const sendCode = async () => {\n    if (!email) return setMsg('이메일을 입력하세요');\n    const res = await fetch('http://localhost:5000/api/auth/send-code', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setVerifyCode(data.code); // 실제 배포 시 서버에 저장해야 함\n      setCodeSent(true);\n      setMsg('인증코드를 이메일로 보냈습니다.');\n    } else {\n      setMsg('코드 전송 실패');\n    }\n  };\n  const confirmCode = () => {\n    if (inputCode === verifyCode) {\n      setVerified(true);\n      setMsg('✅ 이메일 인증 완료');\n    } else {\n      setMsg('❌ 인증코드 불일치');\n    }\n  };\n  const register = async () => {\n    if (!verified) return setMsg('이메일 인증을 완료하세요');\n    if (password !== confirmPassword) return setMsg('비밀번호가 일치하지 않습니다');\n    const res = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const text = await res.text();\n    setMsg(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendCode,\n      children: \"\\uC778\\uC99D\\uCF54\\uB4DC \\uBC1B\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 56\n    }, this), codeSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC778\\uC99D\\uCF54\\uB4DC \\uC785\\uB825\",\n        value: inputCode,\n        onChange: e => setInputCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 117\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: confirmCode,\n        children: \"\\uCF54\\uB4DC \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 112\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 129\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: register,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"6E4ZV99plI5RLmTxYZkR6vkDgqU=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","codeSent","setCodeSent","verifyCode","setVerifyCode","inputCode","setInputCode","verified","setVerified","msg","setMsg","sendCode","res","fetch","method","headers","body","JSON","stringify","data","json","ok","code","confirmCode","register","text","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dlwld/Desktop/JBU/2025_1 CapWeb/client/src/pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\n\nfunction Register() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [codeSent, setCodeSent] = useState(false);\n  const [verifyCode, setVerifyCode] = useState('');\n  const [inputCode, setInputCode] = useState('');\n  const [verified, setVerified] = useState(false);\n  const [msg, setMsg] = useState('');\n\n  const sendCode = async () => {\n    if (!email) return setMsg('이메일을 입력하세요');\n    const res = await fetch('http://localhost:5000/api/auth/send-code', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email })\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setVerifyCode(data.code); // 실제 배포 시 서버에 저장해야 함\n      setCodeSent(true);\n      setMsg('인증코드를 이메일로 보냈습니다.');\n    } else {\n      setMsg('코드 전송 실패');\n    }\n  };\n\n  const confirmCode = () => {\n    if (inputCode === verifyCode) {\n      setVerified(true);\n      setMsg('✅ 이메일 인증 완료');\n    } else {\n      setMsg('❌ 인증코드 불일치');\n    }\n  };\n\n  const register = async () => {\n    if (!verified) return setMsg('이메일 인증을 완료하세요');\n    if (password !== confirmPassword) return setMsg('비밀번호가 일치하지 않습니다');\n\n    const res = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password })\n    });\n    const text = await res.text();\n    setMsg(text);\n  };\n\n  return (\n    <div>\n      <h2>회원가입</h2>\n      <input type=\"email\" placeholder=\"이메일\" value={email} onChange={e => setEmail(e.target.value)} /><br />\n      <button onClick={sendCode}>인증코드 받기</button><br /><br />\n\n      {codeSent && (\n        <>\n          <input type=\"text\" placeholder=\"인증코드 입력\" value={inputCode} onChange={e => setInputCode(e.target.value)} /><br />\n          <button onClick={confirmCode}>코드 확인</button><br /><br />\n        </>\n      )}\n\n      <input type=\"password\" placeholder=\"비밀번호\" value={password} onChange={e => setPassword(e.target.value)} /><br />\n      <input type=\"password\" placeholder=\"비밀번호 확인\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} /><br />\n\n      <button onClick={register}>회원가입</button>\n      <p>{msg}</p>\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}