{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlwld\\\\Desktop\\\\JBU\\\\2025_1 CapWeb\\\\client\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [codeSent, setCodeSent] = useState(false);\n  const [codeInput, setCodeInput] = useState('');\n  const [verified, setVerified] = useState(false);\n  const [msg, setMsg] = useState('');\n  const handleSignupRequest = async () => {\n    if (!email || !password || !confirmPassword) {\n      setMsg('모든 항목을 입력해주세요');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setMsg('비밀번호가 일치하지 않습니다');\n      return;\n    }\n    const res = await fetch('http://localhost:5000/api/auth/send-code', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    if (res.ok) {\n      const data = await res.json();\n      setVerificationCode(data.code); // 실제 서비스에서는 서버에서 저장함\n      setCodeSent(true);\n      setMsg('이메일로 코드가 전송되었습니다');\n    } else {\n      setMsg('코드 전송에 실패했습니다');\n    }\n  };\n  const handleRegister = async () => {\n    if (!codeSent) {\n      setMsg('이메일 인증을 먼저 진행해주세요');\n      return;\n    }\n    if (codeInput !== verificationCode) {\n      setMsg('인증 코드가 일치하지 않습니다');\n      return;\n    }\n    const res = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const text = await res.text();\n    setMsg(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), !codeSent && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignupRequest,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), codeSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC774\\uBA54\\uC77C\\uB85C \\uCF54\\uB4DC\\uAC00 \\uC804\\uC1A1\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC778\\uC99D\\uCF54\\uB4DC \\uC785\\uB825\",\n        value: codeInput,\n        onChange: e => setCodeInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"\\uCD5C\\uC885 \\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"MR8fNbC1FAFd5JCYlhp2rFVdu/k=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","verificationCode","setVerificationCode","codeSent","setCodeSent","codeInput","setCodeInput","verified","setVerified","msg","setMsg","handleSignupRequest","res","fetch","method","headers","body","JSON","stringify","ok","data","json","code","handleRegister","text","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dlwld/Desktop/JBU/2025_1 CapWeb/client/src/pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\n\nfunction Register() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [codeSent, setCodeSent] = useState(false);\n  const [codeInput, setCodeInput] = useState('');\n  const [verified, setVerified] = useState(false);\n  const [msg, setMsg] = useState('');\n\n  const handleSignupRequest = async () => {\n    if (!email || !password || !confirmPassword) {\n      setMsg('모든 항목을 입력해주세요');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setMsg('비밀번호가 일치하지 않습니다');\n      return;\n    }\n\n    const res = await fetch('http://localhost:5000/api/auth/send-code', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email })\n    });\n\n    if (res.ok) {\n      const data = await res.json();\n      setVerificationCode(data.code); // 실제 서비스에서는 서버에서 저장함\n      setCodeSent(true);\n      setMsg('이메일로 코드가 전송되었습니다');\n    } else {\n      setMsg('코드 전송에 실패했습니다');\n    }\n  };\n\n  const handleRegister = async () => {\n    if (!codeSent) {\n      setMsg('이메일 인증을 먼저 진행해주세요');\n      return;\n    }\n    if (codeInput !== verificationCode) {\n      setMsg('인증 코드가 일치하지 않습니다');\n      return;\n    }\n\n    const res = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password })\n    });\n\n    const text = await res.text();\n    setMsg(text);\n  };\n\n  return (\n    <div>\n      <h2>회원가입</h2>\n      <input\n        type=\"email\"\n        placeholder=\"이메일\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      /><br />\n      <input\n        type=\"password\"\n        placeholder=\"비밀번호\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      /><br />\n      <input\n        type=\"password\"\n        placeholder=\"비밀번호 확인\"\n        value={confirmPassword}\n        onChange={(e) => setConfirmPassword(e.target.value)}\n      /><br />\n\n      {!codeSent && (\n        <button onClick={handleSignupRequest}>회원가입하기</button>\n      )}\n\n      {codeSent && (\n        <>\n          <p>이메일로 코드가 전송되었습니다.</p>\n          <input\n            type=\"text\"\n            placeholder=\"인증코드 입력\"\n            value={codeInput}\n            onChange={(e) => setCodeInput(e.target.value)}\n          /><br />\n          <button onClick={handleRegister}>최종 회원가입</button>\n        </>\n      )}\n\n      <p>{msg}</p>\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}